app subdirExample {
  wasp: {
    version: "^0.11.6"
  },
  title: "subdir-example",
  client: {
    baseDir: "/bla"
  },
  auth: {
    userEntity: User,
    methods: {
      email: {
        fromField: {
          email: "mihovil@ilakovac.com",
          name: "Mihovil Ilakovac"
        },
        emailVerification: {
          clientRoute: EmailVerificationRoute,
        },
        passwordReset: {
          clientRoute: PasswordResetRoute,
        }
      }
    },
    onAuthFailedRedirectTo: "/login"
  },
  emailSender: {
    provider: SMTP
  },
  db: {
    system: PostgreSQL
  }
}

entity User {=psl
  id       Int   @id @default(autoincrement())
  email                     String?       @unique
  password                  String?
  isEmailVerified           Boolean       @default(false)
  emailVerificationSentAt   DateTime?
  passwordResetSentAt       DateTime?
psl=}

route RootRoute { path: "/", to: MainPage }
page MainPage {
  component: import Main from "@client/MainPage.jsx"
}

route LoginRoute { path: "/login", to: LoginPage }
page LoginPage {
  component: import { Login } from "@client/pages/auth.tsx"
}

route SignupRoute { path: "/signup", to: SignupPage }
page SignupPage {
  component: import { Signup } from "@client/pages/auth.tsx"
}

route RequestPasswordResetRoute { path: "/request-password-reset", to: RequestPasswordResetPage }
page RequestPasswordResetPage {
  component: import { RequestPasswordReset } from "@client/pages/auth.tsx",
}

route PasswordResetRoute { path: "/password-reset", to: PasswordResetPage }
page PasswordResetPage {
  component: import { PasswordReset } from "@client/pages/auth.tsx",
}

route EmailVerificationRoute { path: "/email-verification", to: EmailVerificationPage }
page EmailVerificationPage {
  component: import { EmailVerification } from "@client/pages/auth.tsx",
}